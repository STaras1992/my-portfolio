[{"C:\\Projects\\MyPortfolio\\my-portfolio\\src\\index.js":"1","C:\\Projects\\MyPortfolio\\my-portfolio\\src\\App.js":"2","C:\\Projects\\MyPortfolio\\my-portfolio\\src\\components\\Header\\Header.js":"3","C:\\Projects\\MyPortfolio\\my-portfolio\\src\\components\\Hero\\Hero.js":"4","C:\\Projects\\MyPortfolio\\my-portfolio\\src\\components\\Footer\\Footer.js":"5","C:\\Projects\\MyPortfolio\\my-portfolio\\src\\components\\Work\\Work.js":"6","C:\\Projects\\MyPortfolio\\my-portfolio\\src\\components\\About\\About.js":"7","C:\\Projects\\MyPortfolio\\my-portfolio\\src\\utills\\getProjects.js":"8","C:\\Projects\\MyPortfolio\\my-portfolio\\src\\components\\Contact\\Contact.js":"9","C:\\Projects\\MyPortfolio\\my-portfolio\\src\\components\\Contact\\MuiContactForm.js":"10"},{"size":275,"mtime":1608899768974,"results":"11","hashOfConfig":"12"},{"size":652,"mtime":1609000864096,"results":"13","hashOfConfig":"12"},{"size":6386,"mtime":1608990714531,"results":"14","hashOfConfig":"12"},{"size":2599,"mtime":1608987983027,"results":"15","hashOfConfig":"12"},{"size":2636,"mtime":1609175199706,"results":"16","hashOfConfig":"12"},{"size":3384,"mtime":1608991092698,"results":"17","hashOfConfig":"12"},{"size":3358,"mtime":1608989194833,"results":"18","hashOfConfig":"12"},{"size":2576,"mtime":1608916897053,"results":"19","hashOfConfig":"12"},{"size":2765,"mtime":1609179838195,"results":"20","hashOfConfig":"12"},{"size":6839,"mtime":1609182614879,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1ods52",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Projects\\MyPortfolio\\my-portfolio\\src\\index.js",[],["46","47"],"C:\\Projects\\MyPortfolio\\my-portfolio\\src\\App.js",["48","49"],"import './App.scss';\r\nimport { Switch, Router } from 'react-router-dom';\r\nimport Header from './components/Header/Header.js';\r\nimport Hero from './components/Hero/Hero.js';\r\nimport Work from './components/Work/Work.js';\r\nimport Footer from './components/Footer/Footer.js';\r\nimport About from './components/About/About.js';\r\nimport Contact from './components/Contact/Contact.js';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='app'>\r\n      <div className='app-container'>\r\n        <Header />\r\n        <Hero />\r\n        <About />\r\n        <Work />\r\n        <Contact />\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Projects\\MyPortfolio\\my-portfolio\\src\\components\\Header\\Header.js",["50","51","52"],"import React, { useState, useEffect } from 'react';\r\nimport { AppBar, Toolbar, Typography, makeStyles, Button, IconButton, Link, Drawer, MenuItem } from '@material-ui/core'; //also Link\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport { Link as ScrollLink, animateScroll as scroll } from 'react-scroll';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst headersData = [\r\n  {\r\n    label: 'About',\r\n    to: 'about',\r\n  },\r\n  {\r\n    label: 'Work',\r\n    to: 'work',\r\n  },\r\n  {\r\n    label: 'Resume',\r\n    to: 'https://stas-docs.s3.eu-central-1.amazonaws.com/StasTarasenkoCV_2020_Eng.pdf',\r\n  },\r\n  {\r\n    label: 'Contact',\r\n    to: 'contact',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  header: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    background: '#000000',\r\n    background: '-webkit-linear-gradient(to right, #434343, #000000)',\r\n    background: 'linear-gradient(to right, #434343, #000000)',\r\n    height: '70px',\r\n    paddingRight: '10px',\r\n    paddingLeft: '10px',\r\n    '@media (max-width: 900px)': {\r\n      paddingLeft: 0,\r\n    },\r\n  },\r\n  logo: {\r\n    fontFamily: 'Work Sans, sans-serif',\r\n    fontSize: '30px',\r\n    fontWeight: 800,\r\n    color: '#FFFEFE',\r\n    textAlign: 'left',\r\n    // textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'none',\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n  menuButton: {\r\n    fontFamily: 'Open Sans, sans-serif',\r\n    fontWeight: 700,\r\n    size: '18px',\r\n    marginLeft: '38px',\r\n    '& navLink active': {\r\n      color: 'red',\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  drawerContainer: {\r\n    background: '#e3eeff',\r\n    height: '100%',\r\n\r\n    '& li': {\r\n      color: 'black',\r\n      fontSize: '1rem',\r\n      fontWeight: 500,\r\n    },\r\n\r\n    padding: '20px 30px',\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    background: 'black',\r\n    height: '70px',\r\n    width: '100%',\r\n  },\r\n  drawerIcon: {\r\n    color: 'white',\r\n    fontSize: '2.5rem',\r\n  },\r\n  active: {\r\n    fontWeight: 800,\r\n    color: 'red',\r\n  },\r\n}));\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    mobileView: false,\r\n    drawerOpen: false,\r\n  });\r\n\r\n  const { mobileView, drawerOpen } = state;\r\n\r\n  useEffect(() => {\r\n    const setResponsiveness = () => {\r\n      return window.innerWidth < 900\r\n        ? setState((prevState) => ({ ...prevState, mobileView: true }))\r\n        : setState((prevState) => ({ ...prevState, mobileView: false }));\r\n    };\r\n\r\n    setResponsiveness();\r\n\r\n    window.addEventListener('resize', () => setResponsiveness());\r\n  }, []);\r\n\r\n  const displayDesktop = () => {\r\n    return (\r\n      <Toolbar className={classes.toolbar}>\r\n        {HeaderLogo}\r\n        <div>{getMenuButtons()}</div>\r\n      </Toolbar>\r\n    );\r\n  };\r\n\r\n  const displayMobile = () => {\r\n    const handleDrawerOpen = () => setState((prevState) => ({ ...prevState, drawerOpen: true }));\r\n    const handleDrawerClose = () => setState((prevState) => ({ ...prevState, drawerOpen: false }));\r\n\r\n    return (\r\n      <Toolbar className={classes.toolbar}>\r\n        <div>{HeaderLogo}</div>\r\n        <IconButton\r\n          {...{\r\n            edge: 'start',\r\n            color: 'inherit',\r\n            'aria-label': 'menu',\r\n            'aria-haspopup': 'true',\r\n            onClick: handleDrawerOpen,\r\n          }}\r\n        >\r\n          <MenuIcon className={classes.drawerIcon} />\r\n        </IconButton>\r\n\r\n        <Drawer\r\n          {...{\r\n            anchor: 'right',\r\n            open: drawerOpen,\r\n            onClose: handleDrawerClose,\r\n            transitionDuration: 500,\r\n          }}\r\n        >\r\n          <div className={classes.drawerHeader}>\r\n            <IconButton\r\n              {...{\r\n                edge: 'start',\r\n                onClick: handleDrawerClose,\r\n              }}\r\n            >\r\n              <ArrowForwardIosIcon className={classes.drawerIcon} />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.drawerContainer}>{getDrawerChoices()}</div>\r\n        </Drawer>\r\n      </Toolbar>\r\n    );\r\n  };\r\n\r\n  const getDrawerChoices = () => {\r\n    return headersData.map(({ label, to }) => {\r\n      return (\r\n        <Link\r\n          {...{\r\n            component: Link,\r\n            href: to,\r\n            color: 'inherit',\r\n            style: { textDecoration: 'none' },\r\n            key: label,\r\n          }}\r\n          target={label === 'Resume' ? '_blank' : '_self'}\r\n        >\r\n          <MenuItem>\r\n            {label !== 'Resume' ? (\r\n              <ScrollLink\r\n                className={classes.navLink}\r\n                activeClass={classes.active}\r\n                to={to}\r\n                spy\r\n                offset={-100}\r\n                smooth\r\n                duration={800}\r\n              >\r\n                {label}\r\n              </ScrollLink>\r\n            ) : (\r\n              label\r\n            )}\r\n          </MenuItem>\r\n        </Link>\r\n      );\r\n    });\r\n  };\r\n\r\n  const HeaderLogo = (\r\n    <Typography variant='h4'>\r\n      <ScrollLink className={classes.logo} to='main' smooth duration={800}>\r\n        STar@s\r\n      </ScrollLink>\r\n    </Typography>\r\n  );\r\n\r\n  const getMenuButtons = () => {\r\n    return headersData.map(({ label, to }) => {\r\n      return (\r\n        <Button\r\n          {...{\r\n            key: label,\r\n            color: 'inherit',\r\n            href: to,\r\n            component: Link,\r\n            className: classes.menuButton,\r\n          }}\r\n          target={label === 'Resume' ? '_blank' : '_self'}\r\n        >\r\n          {label !== 'Resume' ? (\r\n            <ScrollLink\r\n              className={classes.navLink}\r\n              activeClass={classes.active}\r\n              to={to}\r\n              spy\r\n              offset={-100}\r\n              smooth={true}\r\n              duration={800}\r\n            >\r\n              {label}\r\n            </ScrollLink>\r\n          ) : (\r\n            label\r\n          )}\r\n        </Button>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <AppBar className={classes.header}>\r\n        <Container maxWidth='lg'>{mobileView ? displayMobile() : displayDesktop()}</Container>\r\n      </AppBar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Projects\\MyPortfolio\\my-portfolio\\src\\components\\Hero\\Hero.js",[],"C:\\Projects\\MyPortfolio\\my-portfolio\\src\\components\\Footer\\Footer.js",["53","54"],"C:\\Projects\\MyPortfolio\\my-portfolio\\src\\components\\Work\\Work.js",["55"],"import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\nimport getProjects from '../../utills/getProjects.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardGrid: {\r\n    // backgroundImage: 'linear-gradient(to top, #d5d4d0 0%, #d5d4d0 1%, #eeeeec 31%, #efeeec 75%, #e9e9e7 100%)',\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n    marginBottom: '100px',\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '56.25%', // 16:9\r\n    borderBottom: '2px solid #ccc',\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  cardActions: {\r\n    paddingLeft: '16px',\r\n  },\r\n  cardTitle: {\r\n    color: '#394bad',\r\n    fontWeight: 'bold',\r\n  },\r\n  cardDescription: {},\r\n  cardTools: {\r\n    fontWeight: 'bold',\r\n  },\r\n  actionButton: {\r\n    '&:hover': {\r\n      textDecoration: 'none',\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n}));\r\n\r\nconst Work = () => {\r\n  const classes = useStyles();\r\n  const [projects, setProjects] = useState(getProjects());\r\n\r\n  const cards = projects.map((project) => (\r\n    <Grid item key={project.title} xs={12} sm={6} md={4}>\r\n      <Card className={classes.card}>\r\n        <CardMedia className={classes.cardMedia} image={project.image} />\r\n        <CardContent className={classes.cardContent}>\r\n          <Typography className={classes.cardTitle} gutterBottom variant='h6'>\r\n            {project.title}\r\n          </Typography>\r\n          <Typography className={classes.cardDescription} gutterBottom variant='body2'>\r\n            {project.description}\r\n          </Typography>\r\n          <Typography className={classes.cardTools} variant='body1'>{`Tools:${project.tools}`}</Typography>\r\n        </CardContent>\r\n        <CardActions className={classes.cardActions}>\r\n          <Button>\r\n            <Link\r\n              className={classes.actionButton}\r\n              variant='inherit'\r\n              href={project.source}\r\n              color='primary'\r\n              target='_blank'\r\n              rel='noopener noreferrer'\r\n            >\r\n              Source\r\n            </Link>\r\n          </Button>\r\n          {project.adress !== '#' ? (\r\n            <Button>\r\n              <Link\r\n                className={classes.actionButton}\r\n                variant='inherit'\r\n                href={project.adress}\r\n                color='primary'\r\n                target='_blank'\r\n                rel='noopener noreferrer'\r\n              >\r\n                View\r\n              </Link>\r\n            </Button>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  ));\r\n\r\n  return (\r\n    <section id='work'>\r\n      <Container className={classes.cardGrid} maxWidth='lg'>\r\n        <Grid container spacing={4}>\r\n          {cards}\r\n        </Grid>\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Work;\r\n","C:\\Projects\\MyPortfolio\\my-portfolio\\src\\components\\About\\About.js",[],"C:\\Projects\\MyPortfolio\\my-portfolio\\src\\utills\\getProjects.js",[],"C:\\Projects\\MyPortfolio\\my-portfolio\\src\\components\\Contact\\Contact.js",["56"],"C:\\Projects\\MyPortfolio\\my-portfolio\\src\\components\\Contact\\MuiContactForm.js",["57","58","59","60"],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":2,"column":10,"nodeType":"67","messageId":"68","endLine":2,"endColumn":16},{"ruleId":"65","severity":1,"message":"69","line":2,"column":18,"nodeType":"67","messageId":"68","endLine":2,"endColumn":24},{"ruleId":"65","severity":1,"message":"70","line":5,"column":47,"nodeType":"67","messageId":"68","endLine":5,"endColumn":53},{"ruleId":"71","severity":1,"message":"72","line":33,"column":5,"nodeType":"73","messageId":"74","endLine":33,"endColumn":15},{"ruleId":"71","severity":1,"message":"72","line":34,"column":5,"nodeType":"73","messageId":"74","endLine":34,"endColumn":15},{"ruleId":"71","severity":1,"message":"72","line":15,"column":5,"nodeType":"73","messageId":"74","endLine":15,"endColumn":15},{"ruleId":"71","severity":1,"message":"72","line":16,"column":5,"nodeType":"73","messageId":"74","endLine":16,"endColumn":15},{"ruleId":"65","severity":1,"message":"75","line":54,"column":20,"nodeType":"67","messageId":"68","endLine":54,"endColumn":31},{"ruleId":"65","severity":1,"message":"76","line":1,"column":27,"nodeType":"67","messageId":"68","endLine":1,"endColumn":36},{"ruleId":"77","severity":1,"message":"78","line":107,"column":6,"nodeType":"79","endLine":107,"endColumn":22,"suggestions":"80"},{"ruleId":"77","severity":1,"message":"81","line":111,"column":6,"nodeType":"79","endLine":111,"endColumn":21,"suggestions":"82"},{"ruleId":"77","severity":1,"message":"83","line":115,"column":6,"nodeType":"79","endLine":115,"endColumn":24,"suggestions":"84"},{"ruleId":"77","severity":1,"message":"85","line":119,"column":6,"nodeType":"79","endLine":119,"endColumn":24,"suggestions":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'scroll' is defined but never used.","no-dupe-keys","Duplicate key 'background'.","ObjectExpression","unexpected","'setProjects' is assigned a value but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'validate' and 'visited.email'. Either include them or remove the dependency array.","ArrayExpression",["89"],"React Hook useEffect has missing dependencies: 'validate' and 'visited.name'. Either include them or remove the dependency array.",["90"],"React Hook useEffect has missing dependencies: 'validate' and 'visited.subject'. Either include them or remove the dependency array.",["91"],"React Hook useEffect has missing dependencies: 'validate' and 'visited.message'. Either include them or remove the dependency array.",["92"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [formData.email, validate, visited.email]",{"range":"101","text":"102"},"Update the dependencies array to be: [formData.name, validate, visited.name]",{"range":"103","text":"104"},"Update the dependencies array to be: [formData.subject, validate, visited.subject]",{"range":"105","text":"106"},"Update the dependencies array to be: [formData.message, validate, visited.message]",{"range":"107","text":"108"},[3473,3489],"[formData.email, validate, visited.email]",[3562,3577],"[formData.name, validate, visited.name]",[3656,3674],"[formData.subject, validate, visited.subject]",[3753,3771],"[formData.message, validate, visited.message]"]